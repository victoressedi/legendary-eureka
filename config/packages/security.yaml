security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    encoders:
          FOS\UserBundle\Model\UserInterface: bcrypt

    providers:
        #in_memory: { memory: ~ }
        fos_user_bundle:
            id: fos_user.user_provider.username_email

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        
    firewalls:

        #oauth_authorize:
            #pattern:    ^/oauth/v2/auth

        oauth_token:
            pattern:    ^/api/login
            security:   false


        oauth_authorize:
            pattern:    ^/api/auth
            form_login:
                provider: fos_user_bundle
                check_path: /api/auth
                login_path: /api/login

        api:
            pattern:    ^/api/
            fos_oauth:  true
            stateless:  true
            anonymous:  true 
            provider: fos_user_bundle
            logout:
                path:   /logout
                target: /login
#            
#        admin:
#            pattern: ^/admin
#            form_login:
#                provider: fos_user_bundle
#                csrf_token_generator: security.csrf.token_manager
#            logout:
#                path:   /logout
#                target: /login
#            anonymous:    true

        main:
            pattern: ^/
            form_login:
                provider: fos_user_bundle
                csrf_token_generator: security.csrf.token_manager
                check_path: /login_check
                login_path: /login
            logout:       true
            anonymous:    true

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/api-dashboard, role: ROLE_ADMIN }
        - { path: ^/api$, role: ROLE_ADMIN }
        - { path: ^/api/index.html$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/index.json$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/index.jsonld$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs.json, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/, roles:  ROLE_USER  }
        - { path: ^/_profiler, role: ROLE_ADMIN}